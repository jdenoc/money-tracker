language: generic

git:
  depth: 1

# trusty instance & sudo are needed so we can utilise docker
dist: trusty
sudo: required

addons:
  apt:
    update: true
  hosts:
    - money-tracker.docker

services:
  - docker

env: DOCKER_HOST_IP=127.0.0.1 DUSK_SCREENSHOT_DIRECTORY=tests/Browser/screenshots/ COMPOSE_PROJECT_NAME=moneytracker

cache:
  directories:
    - vendor          # composer packages
    - node_modules    # yarn/npm packages
    - public/vue      # webpack generated css/js/webfont
    - .webhook        # stores discord webhook scripts
    - .docker/images  # stores docker images

before_script:
  # load docker images (if any)
  - if [[ -f .docker/images/application.tar.gz ]]; then docker load < .docker/images/application.tar.gz; fi
  - if [[ -f .docker/images/database.tar.gz ]]; then docker load < .docker/images/database.tar.gz; fi
  - if [[ -f .docker/images/selenium.tar.gz ]]; then docker load < .docker/images/selenium.tar.gz; fi
  # start docker containers
  - docker-compose -f .docker/docker-compose.yml up -d
  - docker container exec -t mysql.money-tracker iterate-mysql-health-check
  # make sure user `www-data` has ownership of everything
  - docker container exec -t app.money-tracker chown -R www-data:www-data .
  # general application setup
  - .docker/cmd/artisan.sh key:generate
  - .docker/cmd/artisan.sh app:version `git describe`
  - .docker/cmd/artisan.sh config:clear
  - .docker/cmd/artisan.sh cache:clear
  - .docker/cmd/artisan.sh view:clear
  - docker container exec -t app.money-tracker env
  - docker container exec -t --user www-data app.money-tracker mkdir -p storage/framework/cache/data
  # setup laravel log files
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.debug.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.info.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.notice.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.warning.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.error.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.critical.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.alert.log
  - docker container exec -t --user www-data app.money-tracker touch storage/logs/laravel.emergency.log

stages:
  - build
  - unit-tests
  - "e2e-tests: demo"
  - "e2e-tests: notifications"
  - "e2e-tests: navigation"
  - "e2e-tests: entry-modal"
  - "e2e-tests: filter-modal"
  - "e2e-tests: transfer-modal"

jobs:
  include:
    - stage: build
      before_install:
        - docker pull composer:1.9
        - docker pull node:12
        - docker-compose -f .docker/docker-compose.yml pull
        - DISABLE_XDEBUG=true docker-compose -f .docker/docker-compose.yml build
        # save docker images to be cached and used for tests
        - mkdir -p .docker/images
        - docker save ${COMPOSE_PROJECT_NAME}_application | gzip > .docker/images/application.tar.gz
        - docker save ${COMPOSE_PROJECT_NAME}_database | gzip > .docker/images/database.tar.gz
        - docker save selenium/standalone-chrome:latest | gzip > .docker/images/selenium.tar.gz
      install:  # $GH_TOKEN should be set in travis-ci settings and generated in GitHub user settings
        # install composer packages
        - if [ -n "$GH_TOKEN" ]; then .docker/cmd/composer.sh config github-oauth.github.com ${GH_TOKEN}; fi;
        - .docker/cmd/composer.sh install --no-interaction --optimize-autoloader
        # install yarn packages
        - .docker/cmd/yarn.sh install --non-interactive
        # build/compile website with webpack
        - .docker/cmd/yarn.sh run build-prod
        # install travis-ci/discord integration script(s)
        - mkdir -p .webhook
        - wget -O .webhook/send.sh https://raw.githubusercontent.com/jdenoc/travis-ci-discord-webhook/1.2.0/send.sh
        - wget -O .webhook/image-send.sh https://raw.githubusercontent.com/jdenoc/travis-ci-discord-webhook/1.2.0/image-send.sh
        - chmod +x .webhook/*.sh
      script: true

    - stage: unit-tests
      script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-put
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-get
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-post
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-delete
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite console
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite web
    - script: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite unit

    - stage: "e2e-tests: demo"
      script: .docker/cmd/artisan.sh dusk --group demo --stop-on-failure
    - stage: "e2e-tests: notifications"
      script: .docker/cmd/artisan.sh dusk --group notifications-1 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group notifications-2 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group notifications-3 --stop-on-failure
    - stage: "e2e-tests: navigation"
      script: .docker/cmd/artisan.sh dusk --group navigation-1 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group navigation-2 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group navigation-3 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group navigation-4 --stop-on-failure
    - stage: "e2e-tests: entry-modal"
      script: .docker/cmd/artisan.sh dusk --group entry-modal-1 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group entry-modal-2 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group entry-modal-3 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group entry-modal-4 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group entry-modal-5 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group entry-modal-6 --stop-on-failure
    - stage: "e2e-tests: filter-modal"
      script: .docker/cmd/artisan.sh dusk --group filter-modal-1 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group filter-modal-2 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group filter-modal-3 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group filter-modal-4 --stop-on-failure
    - stage: "e2e-tests: transfer-modal"
      script: .docker/cmd/artisan.sh dusk --group transfer-modal-1 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group transfer-modal-2 --stop-on-failure
    - script: .docker/cmd/artisan.sh dusk --group transfer-modal-3 --stop-on-failure

# $WEBHOOK_URL should be set in travis-ci settings
after_success:
  - .webhook/send.sh success $WEBHOOK_URL

after_failure:
  - .webhook/send.sh failure $WEBHOOK_URL
  - .webhook/image-send.sh --retry=3 --delay=7 $DUSK_SCREENSHOT_DIRECTORY $WEBHOOK_URL
  - docker container logs --tail all --timestamps app.money-tracker > /dev/null
  - .docker/cmd/laravel-logs.sh

after_script:
  - docker-compose -f .docker/docker-compose.yml down -v

# make sure ONLY updates to the master & develop branches cause a build
branches:
  only:
    - master
    - develop