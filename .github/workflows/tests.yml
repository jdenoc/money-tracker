# .github/workflows/tests.yml
name: Money-tracker CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
      - release/v5
  pull_request:
    branches:
      - master
      - release/v5

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  pre-build:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate cache keys [docker]
        id: cache-key-docker
        run: echo "value=cache-docker-${{ hashFiles('.docker/*') }}" >> $GITHUB_OUTPUT

      - name: Generate cache keys [composer]
        id: cache-key-composer
        run: echo "value=cache-composer-${{ hashFiles('composer.*') }}" >> $GITHUB_OUTPUT

      - name: Generate cache keys [npm]
        id: cache-key-npm
        run: echo "value=cache-npm-${{ hashFiles('package*.json') }}" >> $GITHUB_OUTPUT

      - name: Generate cache keys [vue]
        id: cache-key-vue
        run: echo "value=cache-vue-${{ hashFiles('package*.json') }}-${{ hashFiles('resources/*') }}-${{ hashFiles('tailwind.config.js') }}-${{ hashFiles('webpack.mix.js') }}" >> $GITHUB_OUTPUT

      - name: Generate cache paths [docker]
        id: cache-path-docker
        run: echo "value=.docker/images" >> $GITHUB_OUTPUT

      - name: Generate cache paths [composer]
        id: cache-path-composer
        run: echo "value=vendor" >> $GITHUB_OUTPUT

      - name: Generate cache paths [npm]
        id: cache-path-npm
        run: echo "value=node_modules" >> $GITHUB_OUTPUT

      - name: Generate cache paths [vue]
        id: cache-path-vue
        run: |
          echo "value<<EOF" >> $GITHUB_OUTPUT
          echo "public/dist" >> $GITHUB_OUTPUT 
          echo "public/mix-manifest.json" >> $GITHUB_OUTPUT 
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate failure content paths for artifact upload
        id: failure-artifact-paths
        run: |
          echo "value<<EOF" >> $GITHUB_OUTPUT
          echo ".docker/logs/*.json" >> $GITHUB_OUTPUT
          echo ".docker/logs/*.log" >> $GITHUB_OUTPUT
          echo ".docker/logs/application/*.log" >> $GITHUB_OUTPUT
          echo ".docker/logs/database/*.log" >> $GITHUB_OUTPUT
          echo "database/snapshots/*.sql" >> $GITHUB_OUTPUT
          echo "storage/tests/downloads/*.csv" >> $GITHUB_OUTPUT
          echo "tests/Browser/console/*.log" >> $GITHUB_OUTPUT
          echo "tests/Browser/screenshots/" >> $GITHUB_OUTPUT
          echo "!tests/Browser/screenshots/.gitignore" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
    outputs:
      cache-key-docker: ${{ steps.cache-key-docker.outputs.value }}
      cache-key-composer: ${{ steps.cache-key-composer.outputs.value }}
      cache-key-npm: ${{ steps.cache-key-npm.outputs.value }}
      cache-key-vue: ${{ steps.cache-key-vue.outputs.value }}
      cache-path-docker: ${{ steps.cache-path-docker.outputs.value }}
      cache-path-composer: ${{ steps.cache-path-composer.outputs.value }}
      cache-path-npm: ${{ steps.cache-path-npm.outputs.value }}
      cache-path-vue: ${{ steps.cache-path-vue.outputs.value }}
      failure-upload-paths: ${{ steps.failure-artifact-paths.outputs.value }}

  build:
    needs:
      - pre-build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Cache: Docker images"
        id: cache-docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Docker build
        uses: ./.github/actions/setup-docker
        if: steps.docker-image-cache.outputs.cache-hit != 'true'
        with:
          image-path: ${{ needs.pre-build.outputs.cache-path-docker }}

      - name: "Cache: Composer packages"
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Composer setup
        uses: ./.github/actions/setup-composer
        if: steps.composer-cache.outputs.cache-hit != 'true'
        with:
          github-token: ${{ github.token }}
          php-version: "8.0.22"

      - name: "Cache: npm packages"
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: npm setup
        uses: ./.github/actions/setup-npm
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: "Cache: vue"
        id: cache-vue
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      - name: Build Vue
        uses: ./.github/actions/build-vue
        if: steps.vue-cache.outputs.cache-hit != 'true'

      - name: "Linter: PHP"
        id: linter-php
        run: .docker/cmd/composer.sh run-script php-linter

  tests-unit:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      # NOTE: vue cache not needed for unit tests

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - name: unit tests - PUT API endpoints
        run: .docker/cmd/artisan.sh test --testsuite api-put

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - name: unit tests - GET API endpoints
        run: .docker/cmd/artisan.sh test --testsuite api-get

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - name: unit tests - POST API endpoints
        run: .docker/cmd/artisan.sh test --testsuite api-post

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - name: unit tests - DELETE API endpoints
        run: .docker/cmd/artisan.sh test --testsuite api-delete

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
          is-cacheless: true  # artisan app:version testing doesn't work well when configs have been cached
      - name: unit tests - console
        run: .docker/cmd/artisan.sh test --testsuite console

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
          is-cacheless: true  # testing the /export endpoint doesn't work well when configs have been cached
      - name: unit tests - web
        run: .docker/cmd/artisan.sh test --testsuite web

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - name: unit tests - unit (generic)
        run: .docker/cmd/artisan.sh test --testsuite unit

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-unit
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-demo:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group demo --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-demo
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-notifications:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group notifications-1 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-notifications
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-navigation:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group navigation-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group navigation-2 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group navigation-3 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group navigation-4 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-nav
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-entry-modal:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group entry-modal-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group entry-modal-2 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group entry-modal-3 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-entry-modal
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-transfer-modal:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group transfer-modal-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group transfer-modal-2 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-transfer-modal
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-filter-modal:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group filter-modal-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group filter-modal-2 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group filter-modal-export-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group filter-modal-export-2 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-filter-modal
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-stats-summary:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-summary --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-stats-summary
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-stats-trending:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-trending --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-stats-trending
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-stats-distribution:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-distribution-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-distribution-2 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-stats-distribution
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-stats-tags:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-tags-1 --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group stats-tags-2 --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-stats-tags
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  tests-e2e-settings:
    needs:
      - pre-build
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # retrieve cache
      - name: Get Cached Docker images
        id: docker-image-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-docker }}
          key: ${{ needs.pre-build.outputs.cache-key-docker }}

      - name: Get Cached Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-composer }}
          key: ${{ needs.pre-build.outputs.cache-key-composer }}

      - name: Get Cached npm packages
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-npm }}
          key: ${{ needs.pre-build.outputs.cache-key-npm }}

      - name: Get Cached vue
        id: vue-cache
        uses: actions/cache@v3
        with:
          path: ${{ needs.pre-build.outputs.cache-path-vue }}
          key: ${{ needs.pre-build.outputs.cache-key-vue }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group settings-institutions --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group settings-accounts --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group settings-account-types --stop-on-failure

      - uses: ./.github/actions/app-init
        with:
          docker-image-directory: ${{ needs.pre-build.outputs.cache-path-docker }}
      - run: .docker/cmd/artisan.sh dusk --group settings-tags --stop-on-failure

      - name: Failure docker inspection
        uses: ./.github/actions/failure-docker-inspect
        if: failure()

      - name: Failure upload
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ github.sha }}-e2e-settings
          path: ${{ needs.pre-build.outputs.failure-upload-paths }}
          retention-days: 10

  notification:
    runs-on: ubuntu-latest
    needs:  # make sure the notification is sent AFTER the jobs you want included have completed
      - tests-unit
      - tests-e2e-demo
      - tests-e2e-notifications
      - tests-e2e-navigation
      - tests-e2e-entry-modal
      - tests-e2e-transfer-modal
      - tests-e2e-filter-modal
      - tests-e2e-stats-summary
      - tests-e2e-stats-trending
      - tests-e2e-stats-distribution
      - tests-e2e-stats-tags
      - tests-e2e-settings
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
    timeout-minutes: 15
    steps:
      - name: discord
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ github.token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
