# .github/workflows/main.yml
name: Money-tracker CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master & develop branches
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DOCKER_HOST_IP: "127.0.0.1"
  PROJECT_NAME: "moneytracker"

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Docker build
        uses: ./.github/actions/setup-docker
        if: steps.docker-cache.outputs.cache-hit != 'true'

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Composer setup
        uses: ./.github/actions/setup-composer
        if: steps.composer-cache.outputs.cache-hit != 'true'
        with:
          github-token: ${{ github.token }}
          php-version: 7.3

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Yarn setup
        uses: ./.github/actions/setup-yarn
        if: steps.yarn-cache.outputs.cache-hit != 'true'

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      - name: Build Vue
        uses: ./.github/actions/build-vue
        if: steps.vue-cache.outputs.cache-hit != 'true'

  tests-unit:
    needs:
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      # NOTE: vue cache not needed for unit tests

      - uses: ./.github/actions/app-init
      - name: unit tests - PUT API endpoints
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-put

      - uses: ./.github/actions/app-init
      - name: unit tests - GET API endpoints
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-get

      - uses: ./.github/actions/app-init
      - name: unit tests - POST API endpoints
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-post

      - uses: ./.github/actions/app-init
      - name: unit tests - DELETE API endpoints
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite api-delete

      - uses: ./.github/actions/app-init
      - name: unit tests - console
        # artisan app:version testing doesn't work well when configs have been cached
        # because we're not caching, we need to create a new .env file
        run: |
          .docker/cmd/artisan.sh config:clear
          docker container exec -t --user www-data app.money-tracker cp .env.docker .env.testing
          docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite console

      - uses: ./.github/actions/app-init
      - name: unit tests - web
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite web

      - uses: ./.github/actions/app-init
      - name: unit tests - unit (generic)
        run: docker container exec -t app.money-tracker vendor/bin/phpunit --testsuite unit

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-unit
          path: storage/logs/*.log
          retention-days: 30

  tests-e2e-demo:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group demo --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-notifications:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group notifications-1 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-navigation:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group navigation-1 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group navigation-2 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group navigation-3 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group navigation-4 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-entry-modal:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group entry-modal-1 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group entry-modal-2 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-transfer-modal:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group transfer-modal-1 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group transfer-modal-2 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-stats-summary:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-summary --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-stats-trending:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-trending --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-stats-distribution:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-distribution-1 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-distribution-2 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  tests-e2e-stats-tags:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      DUSK_SCREENSHOT_DIR: 'tests/Browser/screenshots/'
      DUSK_DB_DUMP_DIR: 'tests/Browser/db-dump/'
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # retrieve cache
      - name: Cache Docker images
        id: docker-image-cache
        uses: actions/cache@v2
        with:
          path: .docker/images
          key: cache-docker-${{ hashFiles('.docker/*') }}

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: cache-composer-${{ hashFiles('composer.*') }}

      - name: Cache npm/Yarn packages
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-yarn-${{ hashFiles('package.json') }}.${{ hashFiles('yarn.lock') }}

      - name: Cache vue
        id: vue-cache
        uses: actions/cache@v2
        with:
          path: |
            public/vue
            public/mix-manifest.json
          key: cache-vue-${{ hashFiles('resources/*') }}

      # end-2-end tests
      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-tags-1 --stop-on-failure

      - uses: ./.github/actions/app-init
      - run: .docker/cmd/artisan.sh dusk --group stats-tags-2 --stop-on-failure

      - name: Failure upload
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.sha }}-e2e
          path: |
            storage/logs/*.log
            tests/Browser/console/*.log
            ${{ env.DUSK_DB_DUMP_DIR }}*.sql
            ${{ env.DUSK_SCREENSHOT_DIR }}
            !${{ env.DUSK_SCREENSHOT_DIR }}.gitignore
          retention-days: 30

  notification-nebularg-actions-discord-webhook:
    runs-on: ubuntu-latest
    needs:  # make sure the notification is sent AFTER the jobs you want included have completed
      - build
      - tests-unit
      - tests-e2e-demo
      - tests-e2e-notifications
      - tests-e2e-navigation
      - tests-e2e-entry-modal
      - tests-e2e-transfer-modal
      - tests-e2e-stats-summary
      - tests-e2e-stats-trending
      - tests-e2e-stats-distribution
      - tests-e2e-stats-tags
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
    timeout-minutes: 60
    steps:
      - uses: nebularg/actions-discord-webhook@v1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}

  notification-sarisia-actions-status-discord:
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
      - tests-unit
      - tests-e2e-demo
      - tests-e2e-notifications
      - tests-e2e-navigation
      - tests-e2e-entry-modal
      - tests-e2e-transfer-modal
      - tests-e2e-stats-summary
      - tests-e2e-stats-trending
      - tests-e2e-stats-distribution
      - tests-e2e-stats-tags
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
    timeout-minutes: 60
    steps:
      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}

  notification-nobrayner-discord-webhook:
    runs-on: ubuntu-latest
    needs: # make sure the notification is sent AFTER the jobs you want included have completed
      - build
      - tests-unit
      - tests-e2e-demo
      - tests-e2e-notifications
      - tests-e2e-navigation
      - tests-e2e-entry-modal
      - tests-e2e-transfer-modal
      - tests-e2e-stats-summary
      - tests-e2e-stats-trending
      - tests-e2e-stats-distribution
      - tests-e2e-stats-tags
    if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
    timeout-minutes: 60
    steps:
      - uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}