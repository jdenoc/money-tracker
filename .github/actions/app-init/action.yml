# .github/actions/app-init/action.yml
name: App Init
description: Initialise app for use
inputs:
  docker-image-directory:
    description: "Directory docker image(s) were cached/saved"
    required: true
  is-cacheless:
    description: "Set to true to clear cache and create an alternative .env file"
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    # re-load docker images
    - run: |
        docker load -i ${{ inputs.docker-image-directory }}/${PROJECT_NAME}.tar.gz
        docker-compose -f .docker/docker-compose.yml -p $PROJECT_NAME up -d
        docker-compose -f .docker/docker-compose.yml -p $PROJECT_NAME exec database iterate-mysql-health-check
        docker-compose -f .docker/docker-compose.yml -p $PROJECT_NAME ps
      shell: bash
    # ensure correct user:group ownership
    - run: |
        docker container exec -t app.money-tracker chown -R www-data:www-data .
        docker container exec -t selenium.money-tracker chgrp seluser /home/seluser/Downloads
        docker container exec -t selenium.money-tracker chmod g+w /home/seluser/Downloads
      shell: bash
    # general application setup
    - run: |
        .docker/cmd/artisan.sh optimize:clear
        .docker/cmd/artisan.sh key:generate
        .docker/cmd/artisan.sh app:version $(git describe --always)
        .docker/cmd/artisan.sh optimize
        .docker/cmd/artisan.sh view:cache
      shell: bash
    # setup laravel log files
    - run: |
        docker container exec -t --user www-data:www-data app.money-tracker touch storage/logs/php_error.log
        docker container exec -t --user www-data:www-data app.money-tracker touch storage/logs/laravel.log
      shell: bash
    # clear cache and create alternative .env file
    - if: ${{ inputs.is-cacheless != 'false' }}
      run: |
        .docker/cmd/artisan.sh config:clear
        docker container exec -t --user www-data:www-data app.money-tracker cp .env.docker .env.testing
      shell: bash
